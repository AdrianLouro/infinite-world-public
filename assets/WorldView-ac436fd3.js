import{d as P,u as D,o as l,c,a,w as C,v as b,t as p,F as g,r as f,b as $,n as R,_ as z,e as E,f as W,g as A,h as O,i as V}from"./index-1dc1b24f.js";const k=(m,t,n)=>m.sort((h,v)=>n(h).localeCompare(n(v))).reduce((h,v)=>({...h,[t(v)]:n(v)}),{});class w{constructor(t,n){this.x=t,this.y=n}static create(t,n){return new w(t,n)}static fromPrimitives(t){return new w(t.x,t.y)}toPrimitives(){return{x:this.x,y:this.y}}equalsTo(t){return this.x===t.x&&this.y===t.y}}const I=["water","mountain","forest","plain","desert","swamp","glacier","tundra"],N=["orc_city","orc_fortress","human_city","human_fortress","dwarven_city","dwarven_fortress","elven_city","elven_fortress","goblin_city","gnome_city","ruins","volcano","rocks","reef","portal","oasis","thin_ice"],Y=["palace","crypt","tomb","sanctuary","temple","prison","sewers","citadel","pyramid","ziggurat","laboratory","necropolis","entrails","mega_dungeon","cave"];let _=class L{constructor(t=null,n=null,o=null,r=!1,h){this.terrain=t,this.location=n,this.dungeon=o,this.isCurrent=r,this.coordinates=h}static at(t,n){return new L(null,null,null,!1,w.create(t,n))}static fromPrimitives(t){return new L(t.terrain,t.location,t.dungeon,t.isCurrent,w.create(t.coordinates.x,t.coordinates.y))}toPrimitives(){return{terrain:this.terrain,location:this.location,dungeon:this.dungeon,isCurrent:this.isCurrent,coordinates:this.coordinates.toPrimitives()}}};const q={class:"square"},x={value:null},U=["value"],X={value:null},J=["value"],F={value:null},M=["value"],j=P({__name:"Land",props:{land:{}},emits:["dblclick"],setup(m,{emit:t}){const n=()=>{t("dblclick")},{t:o}=D({useScope:"global"}),r=k(I,e=>e,e=>o(`terrain.${e}`)),h=k(N,e=>e,e=>o(`location.${e}`)),v=k(Y,e=>e,e=>o(`dungeon.${e}`));return(e,u)=>(l(),c("div",{class:R(["land",{"land--current":e.land.isCurrent,[`land--${e.land.terrain}`]:e.land.terrain}])},[a("div",q,[C(a("select",{"onUpdate:modelValue":u[0]||(u[0]=s=>e.land.terrain=s)},[a("option",x,p(`<${e.$t("label.terrain")}>`),1),(l(!0),c(g,null,f($(r),(s,i,d)=>(l(),c("option",{key:d,value:i},p(s),9,U))),128))],512),[[b,e.land.terrain]]),C(a("select",{"onUpdate:modelValue":u[1]||(u[1]=s=>e.land.location=s)},[a("option",X,p(`<${e.$t("label.location")}>`),1),(l(!0),c(g,null,f($(h),(s,i,d)=>(l(),c("option",{key:d,value:i},p(s),9,J))),128))],512),[[b,e.land.location]]),C(a("select",{"onUpdate:modelValue":u[2]||(u[2]=s=>e.land.dungeon=s)},[a("option",F,p(`<${e.$t("label.dungeon")}>`),1),(l(!0),c(g,null,f($(v),(s,i,d)=>(l(),c("option",{key:d,value:i},p(s),9,M))),128))],512),[[b,e.land.dungeon]]),a("div",{class:"coordinates",onDblclick:u[3]||(u[3]=s=>n())},p(e.land.coordinates.x+" / "+e.land.coordinates.y),33)])],2))}});const G=z(j,[["__scopeId","data-v-13342f42"]]);class y{constructor(t){this.lands=t}static ofSize(t){const n=_.at(0,0);n.isCurrent=!0;const o=new y([[n]]);return Array(t-1).fill(void 0).forEach(()=>{o.addTopRow(),o.addRightColumn(),o.addBottomRow(),o.addLeftColumn()}),o}static fromPrimitives(t){return new y(t.lands.map(n=>n.map(o=>_.fromPrimitives(o))))}toPrimitives(){return{lands:this.lands.map(t=>t.map(n=>n.toPrimitives()))}}addTopRow(){const t=this.lands[0][0].coordinates.y-1;this.lands.unshift(this.newRowAt(t))}addBottomRow(){const t=this.lands[this.lands.length-1][0].coordinates.y+1;this.lands.push(this.newRowAt(t))}addLeftColumn(){const t=this.lands[0][0].coordinates.x-1,n=this.lands[0][0].coordinates.y;this.lands.forEach((o,r)=>{o.unshift(_.at(t,n+r))})}addRightColumn(){const t=this.lands[0][this.lands[0].length-1].coordinates.x+1,n=this.lands[0][0].coordinates.y;this.lands.forEach((o,r)=>{o.push(_.at(t,n+r))})}movePlayersTo(t){this.lands.forEach(n=>{n.forEach(o=>{o.isCurrent=o.coordinates.equalsTo(t)})})}newRowAt(t){const n=this.lands[0][0].coordinates.x;return Array(this.lands[0].length).fill(void 0).map((o,r)=>_.at(n+r,t))}}const H=()=>({save:K,get:Q}),K=m=>{localStorage.setItem("world",JSON.stringify(m.toPrimitives()))},Q=()=>Z(),Z=()=>{const m=localStorage.getItem("world");return m?y.fromPrimitives(JSON.parse(m)):null},tt={class:"world"},ot={class:"top"},nt={class:"center"},et={class:"hexes"},st={class:"bottom"},at=P({__name:"World",setup(m){const t=H(),o=E((()=>t.get()??y.ofSize(3))());W(o,s=>{t.save(s)});const r=()=>{o.addTopRow()},h=()=>{o.addBottomRow()},v=()=>{o.addLeftColumn()},e=()=>{o.addRightColumn()},u=s=>{o.movePlayersTo(s)};return(s,i)=>(l(),c("div",tt,[a("div",ot,[a("div",{class:"add-button",onClick:i[0]||(i[0]=d=>r())},"+")]),a("div",nt,[a("div",{class:R(["add-button",{"add-button--margin-right":o.lands.length>1}]),onClick:i[1]||(i[1]=d=>v())}," + ",2),a("div",et,[(l(!0),c(g,null,f(o.lands,(d,T)=>(l(),c("div",{key:T,class:R(["row",{"row--margin-left":d[0].coordinates.y%2!==0}])},[(l(!0),c(g,null,f(d,(S,B)=>(l(),A(G,{key:B,land:S,onDblclick:rt=>u(S.coordinates)},null,8,["land","onDblclick"]))),128))],2))),128))]),a("div",{class:"add-button",onClick:i[2]||(i[2]=d=>e())},"+")]),a("div",st,[a("div",{class:"add-button",onClick:i[3]||(i[3]=d=>h())},"+")])]))}});const lt=P({__name:"WorldView",setup(m){return(t,n)=>{const o=O("draggable"),r=O("zoomable");return l(),c("main",null,[C(V(at,null,null,512),[[o],[r]])])}}});export{lt as default};
