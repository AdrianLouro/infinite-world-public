import{d as j,h as U,i as X,u as F,o as i,c as d,j as l,n as p,k as z,F as v,e as P,v as O,t as g,l as C,f as E,m as k,_ as V,p as J,q as H,s as M}from"./index-CE-GDzSn.js";const N=(e,t,o)=>e.toSorted((n,u)=>o(n).localeCompare(o(u))).reduce((n,u)=>({...n,[t(u)]:o(u)}),{});class R{constructor(t,o){this.x=t,this.y=o}static create(t,o){return new R(t,o)}static fromPrimitives(t){return new R(t.x,t.y)}toPrimitives(){return{x:this.x,y:this.y}}equalsTo(t){return this.x===t.x&&this.y===t.y}}const ft=["water","mountain","forest","plain","desert","swamp","glacier","tundra"],kt=["1","2"],Q=["orc_city","orc_fortress","human_city","human_fortress","dwarven_city","dwarven_fortress","elven_city","elven_fortress","goblin_city","gnome_city","ruins","volcano","rocks","reef","portal","oasis","thin_ice"],_=["palace","crypt","tomb","sanctuary","temple","prison","sewers","citadel","pyramid","ziggurat","laboratory","necropolis","entrails","mega_dungeon","cave"];let b=class A{constructor(t=null,o=0,r=null,n=null,u=!1,w){this.terrain=t,this.terrainRotation=o,this.location=r,this.dungeon=n,this.isCurrent=u,this.coordinates=w}static at(t,o){return new A(null,0,null,null,!1,R.create(t,o))}static fromPrimitives(t){return new A(t.terrain,t.terrainRotation??0,t.location,t.dungeon,t.isCurrent??!1,R.fromPrimitives(t.coordinates))}toPrimitives(){return{terrain:this.terrain,terrainRotation:this.terrainRotation,location:this.location,dungeon:this.dungeon,isCurrent:this.isCurrent,coordinates:this.coordinates.toPrimitives()}}rotateTerrain(){this.terrainRotation=(this.terrainRotation+90)%360}};var G=(e=>(e.Hexagon="hexagon",e.Square="square",e))(G||{});const K={class:"land__content"},Z={class:"info"},tt={value:null},ot=["value"],et={value:null},nt=["value"],at={value:null},rt=["value"],st={class:"bottom-actions"},it=j({__name:"Land",props:{terrainsBackgroundRules:{type:Array,required:!0},terrainsOptions:{type:Object,required:!0},land:{type:Object,required:!0},shape:{type:String,required:!0},showLocations:{type:Boolean,required:!0},showDungeons:{type:Boolean,required:!0},showRotateButton:{type:Boolean,required:!0},showToggleInfoButton:{type:Boolean,required:!0}},emits:["dblclick","rotateTerrainClick"],setup(e,{emit:t}){const o=e,r=t,n=U(!0),u=X(()=>o.terrainsBackgroundRules.find(a=>a.appliesFor(o.land))),w=()=>{r("dblclick")},q=()=>{r("rotateTerrainClick")},L=()=>{n.value=!n.value},{t:T}=F({useScope:"global"}),x=N(Q,a=>a,a=>T(`location.${a}`)),h=N(_,a=>a,a=>T(`dungeon.${a}`));return(a,s)=>{var $,m,B,S,D,W;return i(),d("div",{class:p(["land",{"land--current":e.land.isCurrent,[`land--${e.land.terrain}`]:e.land.terrain,[`land--${o.shape}`]:o.shape}]),style:z({backgroundColor:(($=u.value)==null?void 0:$.backgroundType)==="color"?(m=u.value)==null?void 0:m.background:"transparent ",borderColor:((B=u.value)==null?void 0:B.backgroundType)==="color"?(S=u.value)==null?void 0:S.background:"transparent"})},[l("div",K,[l("div",{class:p(["terrain-image",{[`terrain-image--rotation-${e.land.terrainRotation}`]:e.land.terrainRotation}]),style:z({backgroundImage:((D=u.value)==null?void 0:D.backgroundType)==="image"?`url(${(W=u.value)==null?void 0:W.background})`:"transparent"})},null,6),l("div",Z,[n.value?(i(),d(v,{key:0},[P(l("select",{"onUpdate:modelValue":s[0]||(s[0]=c=>e.land.terrain=c)},[l("option",tt,g(`<${a.$t("label.terrain")}>`),1),(i(!0),d(v,null,C(o.terrainsOptions,(c,y,f)=>(i(),d("option",{key:f,value:y},g(c),9,ot))),128))],512),[[O,e.land.terrain]]),o.showLocations?P((i(),d("select",{key:0,"onUpdate:modelValue":s[1]||(s[1]=c=>e.land.location=c)},[l("option",et,g(`<${a.$t("label.location")}>`),1),(i(!0),d(v,null,C(E(x),(c,y,f)=>(i(),d("option",{key:f,value:y},g(c),9,nt))),128))],512)),[[O,e.land.location]]):k("",!0),o.showDungeons?P((i(),d("select",{key:1,"onUpdate:modelValue":s[2]||(s[2]=c=>e.land.dungeon=c)},[l("option",at,g(`<${a.$t("label.dungeon")}>`),1),(i(!0),d(v,null,C(E(h),(c,y,f)=>(i(),d("option",{key:f,value:y},g(c),9,rt))),128))],512)),[[O,e.land.dungeon]]):k("",!0)],64)):k("",!0)]),l("div",st,[o.showRotateButton?(i(),d("div",{key:0,class:"rotate-button",onClick:s[3]||(s[3]=c=>q())})):k("",!0),l("div",{class:"coordinates",onDblclick:s[4]||(s[4]=c=>w())},g(e.land.coordinates.x+" / "+e.land.coordinates.y),33),o.showToggleInfoButton?(i(),d("div",{key:1,class:p(["toggle-info-button",{"toggle-info-button--hide":!n.value}]),onClick:s[5]||(s[5]=c=>L())},null,2)):k("",!0)])])],6)}}}),lt=V(it,[["__scopeId","data-v-ae3cd421"]]);let Y=class I{constructor(t){this.lands=t}static ofSize(t){const o=b.at(0,0);o.isCurrent=!0;const r=new I([[o]]);return Array(t-1).fill(void 0).forEach(()=>{r.addTopRow(),r.addRightColumn(),r.addBottomRow(),r.addLeftColumn()}),r}static fromPrimitives(t){return new I(t.lands.map(o=>o.map(r=>b.fromPrimitives(r))))}toPrimitives(){return{lands:this.lands.map(t=>t.map(o=>o.toPrimitives()))}}addTopRow(){const t=this.lands[0][0].coordinates.y-1;this.lands.unshift(this.newRowAt(t))}addBottomRow(){const t=this.lands[this.lands.length-1][0].coordinates.y+1;this.lands.push(this.newRowAt(t))}addLeftColumn(){const t=this.lands[0][0].coordinates.x-1,o=this.lands[0][0].coordinates.y;this.lands.forEach((r,n)=>{r.unshift(b.at(t,o+n))})}addRightColumn(){const t=this.lands[0][this.lands[0].length-1].coordinates.x+1,o=this.lands[0][0].coordinates.y;this.lands.forEach((r,n)=>{r.push(b.at(t,o+n))})}movePlayersTo(t){this.lands.flat().forEach(o=>{o.isCurrent=o.coordinates.equalsTo(t)})}rotateTerrainAt(t){this.findLandAt(t).rotateTerrain()}findLandAt(t){const o=this.lands.flat().find(r=>r.coordinates.equalsTo(t));if(o===void 0)throw new Error(`Could not find land at ${t}`);return o}newRowAt(t){const o=this.lands[0][0].coordinates.x;return Array(this.lands[0].length).fill(void 0).map((r,n)=>b.at(o+n,t))}};const dt=()=>({save:ut,get:ct}),ut=e=>{localStorage.setItem("world",JSON.stringify(e.toPrimitives()))},ct=()=>ht(),ht=()=>{const e=localStorage.getItem("world");return e?Y.fromPrimitives(JSON.parse(e)):null},gt={class:"top"},mt={class:"center"},vt={class:"lands"},pt={class:"bottom"},wt=j({__name:"World",props:{terrainsOptions:{type:Object,required:!0},terrainsBackgroundRules:{type:Array,required:!0},landShape:{type:String,required:!0},showLocations:{type:Boolean,required:!0},showDungeons:{type:Boolean,required:!0},showRotateButton:{type:Boolean,required:!0},showToggleInfoButton:{type:Boolean,required:!0},initialSize:{type:Number,required:!0}},setup(e){const t=e,o=dt(),n=J(o.get()??Y.ofSize(t.initialSize));H(n,h=>{o.save(h)});const u=()=>{n.addTopRow()},w=()=>{n.addBottomRow()},q=()=>{n.addLeftColumn()},L=()=>{n.addRightColumn()},T=h=>{n.movePlayersTo(h)},x=h=>{n.rotateTerrainAt(h)};return(h,a)=>(i(),d("div",{class:p(["world",{[`world--${t.landShape}`]:t.landShape}])},[l("div",gt,[l("div",{class:"add-button",onClick:a[0]||(a[0]=s=>u())},"+")]),l("div",mt,[l("div",{class:p(["add-button",{"add-button--margin-right-square":t.landShape==="square"&&n.lands.length>1,"add-button--margin-right-hexagon":t.landShape==="hexagon"&&n.lands.length>1}]),onClick:a[1]||(a[1]=s=>q())}," + ",2),l("div",vt,[(i(!0),d(v,null,C(n.lands,(s,$)=>(i(),d("div",{key:$,class:p(["row",{"row--margin-left-square":t.landShape==="square"&&n.lands.length>1,"row--margin-left-hexagon":t.landShape==="hexagon"&&s[0].coordinates.y%2!==0}])},[(i(!0),d(v,null,C(s,(m,B)=>(i(),M(lt,{key:B,land:m,"terrains-options":e.terrainsOptions,"terrains-background-rules":e.terrainsBackgroundRules,shape:t.landShape,"show-locations":t.showLocations,"show-dungeons":t.showDungeons,"show-rotate-button":t.showRotateButton,"show-toggle-info-button":t.showToggleInfoButton,onDblclick:S=>T(m.coordinates),onRotateTerrainClick:S=>x(m.coordinates)},null,8,["land","terrains-options","terrains-background-rules","shape","show-locations","show-dungeons","show-rotate-button","show-toggle-info-button","onDblclick","onRotateTerrainClick"]))),128))],2))),128))]),l("div",{class:"add-button",onClick:a[2]||(a[2]=s=>L())},"+")]),l("div",pt,[l("div",{class:"add-button",onClick:a[3]||(a[3]=s=>w())},"+")])],2))}}),bt=V(wt,[["__scopeId","data-v-a38016af"]]),Ct=(e,t)=>({appliesFor:e,background:t,backgroundType:"color"}),Rt=(e,t)=>({appliesFor:e,background:t,backgroundType:"image"});export{G as L,bt as W,Ct as a,Rt as b,N as c,kt as d,ft as n};
