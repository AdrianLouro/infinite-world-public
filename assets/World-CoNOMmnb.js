import{d as O,h as z,u as E,o as l,c as u,i as d,n as v,F as w,e as S,v as B,t as m,j as C,f as x,k as p,_ as D,l as N,m as j,p as V}from"./index-BryVmvUF.js";const P=(n,t,o)=>n.toSorted((e,c)=>o(e).localeCompare(o(c))).reduce((e,c)=>({...e,[t(c)]:o(c)}),{});class R{constructor(t,o){this.x=t,this.y=o}static create(t,o){return new R(t,o)}static fromPrimitives(t){return new R(t.x,t.y)}toPrimitives(){return{x:this.x,y:this.y}}equalsTo(t){return this.x===t.x&&this.y===t.y}}const ht=["water","mountain","forest","plain","desert","swamp","glacier","tundra"],gt=["1","2","3"],Y=["orc_city","orc_fortress","human_city","human_fortress","dwarven_city","dwarven_fortress","elven_city","elven_fortress","goblin_city","gnome_city","ruins","volcano","rocks","reef","portal","oasis","thin_ice"],U=["palace","crypt","tomb","sanctuary","temple","prison","sewers","citadel","pyramid","ziggurat","laboratory","necropolis","entrails","mega_dungeon","cave"];let y=class q{constructor(t=null,o=0,a=null,e=null,c=!1,f){this.terrain=t,this.terrainRotation=o,this.location=a,this.dungeon=e,this.isCurrent=c,this.coordinates=f}static at(t,o){return new q(null,0,null,null,!1,R.create(t,o))}static fromPrimitives(t){return new q(t.terrain,t.terrainRotation,t.location,t.dungeon,t.isCurrent,R.fromPrimitives(t.coordinates))}toPrimitives(){return{terrain:this.terrain,terrainRotation:this.terrainRotation,location:this.location,dungeon:this.dungeon,isCurrent:this.isCurrent,coordinates:this.coordinates.toPrimitives()}}rotateTerrain(){this.terrainRotation=(this.terrainRotation+90)%360}};var X=(n=>(n.Hexagon="hexagon",n.Square="square",n))(X||{});const _={class:"land__content"},J={class:"info"},F={value:null},H=["value"],M={value:null},Q=["value"],G={value:null},K=["value"],Z={class:"bottom-actions"},tt=O({__name:"Land",props:{terrainsOptions:{type:Object,required:!0},land:{type:Object,required:!0},shape:{type:String,required:!0},showLocations:{type:Boolean,required:!0},showDungeons:{type:Boolean,required:!0},showRotateButton:{type:Boolean,required:!0},showToggleInfoButton:{type:Boolean,required:!0}},emits:["dblclick","rotateTerrainClick"],setup(n,{emit:t}){const o=n,a=t,e=z(!0),c=()=>{a("dblclick")},f=()=>{a("rotateTerrainClick")},b=()=>{e.value=!e.value},{t:k}=E({useScope:"global"}),$=P(Y,i=>i,i=>k(`location.${i}`)),T=P(U,i=>i,i=>k(`dungeon.${i}`));return(i,s)=>(l(),u("div",{class:v(["land",{"land--current":n.land.isCurrent,[`land--${n.land.terrain}`]:n.land.terrain,[`land--${o.shape}`]:o.shape}])},[d("div",_,[d("div",{class:v(["terrain-image",{[`terrain-image--rotation-${n.land.terrainRotation}`]:n.land.terrainRotation}])},null,2),d("div",J,[e.value?(l(),u(w,{key:0},[S(d("select",{"onUpdate:modelValue":s[0]||(s[0]=r=>n.land.terrain=r)},[d("option",F,m(`<${i.$t("label.terrain")}>`),1),(l(!0),u(w,null,C(o.terrainsOptions,(r,g,h)=>(l(),u("option",{key:h,value:g},m(r),9,H))),128))],512),[[B,n.land.terrain]]),o.showLocations?S((l(),u("select",{key:0,"onUpdate:modelValue":s[1]||(s[1]=r=>n.land.location=r)},[d("option",M,m(`<${i.$t("label.location")}>`),1),(l(!0),u(w,null,C(x($),(r,g,h)=>(l(),u("option",{key:h,value:g},m(r),9,Q))),128))],512)),[[B,n.land.location]]):p("",!0),o.showDungeons?S((l(),u("select",{key:1,"onUpdate:modelValue":s[2]||(s[2]=r=>n.land.dungeon=r)},[d("option",G,m(`<${i.$t("label.dungeon")}>`),1),(l(!0),u(w,null,C(x(T),(r,g,h)=>(l(),u("option",{key:h,value:g},m(r),9,K))),128))],512)),[[B,n.land.dungeon]]):p("",!0)],64)):p("",!0)]),d("div",Z,[o.showRotateButton?(l(),u("div",{key:0,class:"rotate-button",onClick:s[3]||(s[3]=r=>f())})):p("",!0),d("div",{class:"coordinates",onDblclick:s[4]||(s[4]=r=>c())},m(n.land.coordinates.x+" / "+n.land.coordinates.y),33),o.showToggleInfoButton?(l(),u("div",{key:1,class:v(["toggle-info-button",{"toggle-info-button--hide":!e.value}]),onClick:s[5]||(s[5]=r=>b())},null,2)):p("",!0)])])],2))}}),ot=D(tt,[["__scopeId","data-v-46edafd2"]]);let I=class L{constructor(t){this.lands=t}static ofSize(t){const o=y.at(0,0);o.isCurrent=!0;const a=new L([[o]]);return Array(t-1).fill(void 0).forEach(()=>{a.addTopRow(),a.addRightColumn(),a.addBottomRow(),a.addLeftColumn()}),a}static fromPrimitives(t){return new L(t.lands.map(o=>o.map(a=>y.fromPrimitives(a))))}toPrimitives(){return{lands:this.lands.map(t=>t.map(o=>o.toPrimitives()))}}addTopRow(){const t=this.lands[0][0].coordinates.y-1;this.lands.unshift(this.newRowAt(t))}addBottomRow(){const t=this.lands[this.lands.length-1][0].coordinates.y+1;this.lands.push(this.newRowAt(t))}addLeftColumn(){const t=this.lands[0][0].coordinates.x-1,o=this.lands[0][0].coordinates.y;this.lands.forEach((a,e)=>{a.unshift(y.at(t,o+e))})}addRightColumn(){const t=this.lands[0][this.lands[0].length-1].coordinates.x+1,o=this.lands[0][0].coordinates.y;this.lands.forEach((a,e)=>{a.push(y.at(t,o+e))})}movePlayersTo(t){this.lands.flat().forEach(o=>{o.isCurrent=o.coordinates.equalsTo(t)})}rotateTerrainAt(t){this.findLandAt(t).rotateTerrain()}findLandAt(t){const o=this.lands.flat().find(a=>a.coordinates.equalsTo(t));if(o===void 0)throw new Error(`Could not find land at ${t}`);return o}newRowAt(t){const o=this.lands[0][0].coordinates.x;return Array(this.lands[0].length).fill(void 0).map((a,e)=>y.at(o+e,t))}};const nt=()=>({save:et,get:at}),et=n=>{localStorage.setItem("world",JSON.stringify(n.toPrimitives()))},at=()=>st(),st=()=>{const n=localStorage.getItem("world");return n?I.fromPrimitives(JSON.parse(n)):null},rt={class:"top"},it={class:"center"},lt={class:"lands"},dt={class:"bottom"},ut=O({__name:"World",props:{terrainsOptions:{type:Object,required:!0},landShape:{type:String,required:!0},showLocations:{type:Boolean,required:!0},showDungeons:{type:Boolean,required:!0},showRotateButton:{type:Boolean,required:!0},showToggleInfoButton:{type:Boolean,required:!0},initialSize:{type:Number,required:!0}},setup(n){const t=n,o=nt(),e=N(o.get()??I.ofSize(t.initialSize));j(e,i=>{o.save(i)});const c=()=>{e.addTopRow()},f=()=>{e.addBottomRow()},b=()=>{e.addLeftColumn()},k=()=>{e.addRightColumn()},$=i=>{e.movePlayersTo(i)},T=i=>{e.rotateTerrainAt(i)};return(i,s)=>(l(),u("div",{class:v(["world",{[`world--${t.landShape}`]:t.landShape}])},[d("div",rt,[d("div",{class:"add-button",onClick:s[0]||(s[0]=r=>c())},"+")]),d("div",it,[d("div",{class:v(["add-button",{"add-button--margin-right-square":t.landShape==="square"&&e.lands.length>1,"add-button--margin-right-hexagon":t.landShape==="hexagon"&&e.lands.length>1}]),onClick:s[1]||(s[1]=r=>b())}," + ",2),d("div",lt,[(l(!0),u(w,null,C(e.lands,(r,g)=>(l(),u("div",{key:g,class:v(["row",{"row--margin-left-square":t.landShape==="square"&&e.lands.length>1,"row--margin-left-hexagon":t.landShape==="hexagon"&&r[0].coordinates.y%2!==0}])},[(l(!0),u(w,null,C(r,(h,A)=>(l(),V(ot,{key:A,land:h,"terrains-options":n.terrainsOptions,shape:t.landShape,"show-locations":t.showLocations,"show-dungeons":t.showDungeons,"show-rotate-button":t.showRotateButton,"show-toggle-info-button":t.showToggleInfoButton,onDblclick:W=>$(h.coordinates),onRotateTerrainClick:W=>T(h.coordinates)},null,8,["land","terrains-options","shape","show-locations","show-dungeons","show-rotate-button","show-toggle-info-button","onDblclick","onRotateTerrainClick"]))),128))],2))),128))]),d("div",{class:"add-button",onClick:s[2]||(s[2]=r=>k())},"+")]),d("div",dt,[d("div",{class:"add-button",onClick:s[3]||(s[3]=r=>f())},"+")])],2))}}),mt=D(ut,[["__scopeId","data-v-d0576743"]]);export{X as L,mt as W,P as c,gt as d,ht as n};
